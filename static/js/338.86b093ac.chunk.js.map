{"version":3,"file":"static/js/338.86b093ac.chunk.js","mappings":"sNAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EACvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EACnBC,EAAe,SAAAP,GAAK,OAAIA,EAAMQ,MAAV,EAEpBC,GAA4BC,EAAAA,EAAAA,IAAe,CAACX,EAAgBQ,IAAe,SAACN,EAAUO,GAAX,OAAsBP,EAASO,QAAO,SAAAG,GAAO,OAAIA,EAAQC,KAAKC,cAAcC,SAASN,EAAOK,cAA/C,GAA7C,I,kDCNxF,EAAuB,8BAAvB,EAA6D,+BAA7D,EAAoG,+BAApG,EAA+I,mCAA/I,EAAwL,6BAAxL,EAAgO,kCAAhO,EAA6Q,kC,SCGhQE,EAAkB,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,aAAcC,EAA4B,EAA5BA,SAAUL,EAAkB,EAAlBA,KAAMM,EAAY,EAAZA,OAC7D,GAAoCC,EAAAA,EAAAA,UAASP,GAA7C,eAAOQ,EAAP,KAAmBC,EAAnB,KACA,GAAwCF,EAAAA,EAAAA,UAASD,GAAjD,eAAOI,EAAP,KAAqBC,EAArB,KAUA,OACE,kBAAMC,UAAWC,EAAUR,SAAUA,EAAUS,aAAa,MAA5D,WACE,kBAAOF,UAAWC,EAAlB,UACE,kBAAOD,UAAS,UAAKC,EAAL,YAAkBA,GAAiBE,KAAK,OAAOf,KAAK,OAAOgB,MAAOR,EAAYS,SAX3E,SAACC,GACxBT,EAAcS,EAAEC,OAAOH,MACxB,OAWG,mBAAOJ,UAAWC,EAAlB,mBAEE,kBAAOD,UAAWC,EAAWE,KAAK,MAAMf,KAAK,SAASgB,MAAK,WAAMN,GAAgBO,SAX5D,SAACC,GAC1BP,EAAgBO,EAAEC,OAAOH,MAC1B,QAWG,mBAAQJ,UAAS,UAAKC,EAAL,YAAgBA,GAAgBE,KAAK,SAAtD,UAA+D,SAAC,MAAD,CAAsBK,KAAM,GAAIC,MAAM,eACrG,mBAAQT,UAAS,UAAKC,EAAL,YAAgBA,GAAgBS,QAASlB,EAAcW,KAAK,SAA7E,UAAsF,SAAC,MAAD,CAAsBK,KAAM,GAAIC,MAAM,gBAGjI,EC5BD,EAA0B,iCAA1B,EAAuE,mCAAvE,EAAqH,kCAArH,EAA8J,8BAA9J,EAAqM,gCAArM,EAA8R,6BAA9R,EAAqU,iCAArU,EAA+W,gCCYlWE,EAAkB,SAAC,GAAiB,IAAfxB,EAAc,EAAdA,QAChC,GAAkDQ,EAAAA,EAAAA,WAAS,GAA3D,eAAOiB,EAAP,KAA0BC,EAA1B,KAUA,IAgBMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,gBAAqBf,UAAWC,EAAhC,UAEGW,GACC,gBAAKZ,UAAWC,EAAhB,UACE,SAACV,EAAD,CAAiBC,aA1BzB,WACEqB,GAAqB,EACtB,EAwB0DpB,SAvB3B,SAAAa,GAC9BA,EAAEU,iBAAkB,IAAMC,EAAOX,EAAEY,cAC7BC,EAAS,CACbC,GAAIjC,EAAQiC,GACZhC,KAAM6B,EAAKI,SAASjC,KAAKgB,MACzBV,OAAQuB,EAAKI,SAAS3B,OAAOU,OAEvBU,GACEQ,EAAAA,EAAAA,IAAYH,IAGtBF,EAAKM,QACLV,GAAqB,EACtB,EAU6FzB,KAAMD,EAAQC,KAAMM,OAAQP,EAAQO,YAGxH,iBAAKM,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAAyBd,EAAQC,QACjC,eAAGY,UAAWC,EAAd,mBAAiCd,EAAQO,cAG3C,mBAAQM,UAAS,UAAKC,EAAL,YAAoBA,GAAWS,QAxC9D,WACEG,GAAqB,GACrBW,QAAQC,IAAI,aAEX,EAoCW,UAA8E,SAAC,MAAD,CAAQjB,KAAM,GAAIC,MAAM,kBAO5G,mBAAQT,UAAS,UAAKC,EAAL,YAAmBA,GAAWS,QAAS,WAAQI,GAASY,EAAAA,EAAAA,IAAcvC,EAAQiC,IAAM,EAArG,UAAuG,SAAC,MAAD,CAAUZ,KAAM,GAAIC,MAAM,gBApB5HtB,EAAQiC,GAuBpB,ECjED,EAA2B,+BCIdO,EAAe,WAC1B,IAAMlD,GAAWmD,EAAAA,EAAAA,IAAY3C,GAE7B,OACE,eAAIe,UAAWC,EAAf,SAEIxB,EAASoD,KAAI,SAAA1C,GAAO,OAAI,SAACwB,EAAD,CAAiBxB,QAASA,GAA9B,KAI3B,E,8BCdD,G,QAAkE,2BAAlE,EAAoG,2BAApG,EAAuI,2BAAvI,EAA2K,4BAA3K,EAA+M,2BCQzM2C,EAASC,EAAAA,KAAaC,MAAM,CAChC5C,KAAM2C,EAAAA,KACHE,IAAI,EAAG,cACPC,IAAI,GAAI,eAGAC,EAAc,WACzB,IAAMrB,GAAWC,EAAAA,EAAAA,MACXtC,GAAWmD,EAAAA,EAAAA,IAAYrD,GAE7B,OAEE,SAAC,KAAD,CACE6D,cAAe,CACbhD,KAAM,GACNM,OAAQ,IAEV2C,iBAAkBP,EAClBrC,SAAU,SAAC0B,EAAQmB,GAEjB,GAD2F,IAApE7D,EAASO,QAAO,SAAAG,GAAO,OAAIA,EAAQC,OAAS+B,EAAO/B,IAA5B,IAAkCmD,OAI9E,OAFAC,MAAM,GAAD,OAAIrB,EAAO/B,KAAX,kCACLkD,EAAQG,YAGV3B,GAAS4B,EAAAA,EAAAA,IAAWvB,IACpBmB,EAAQG,WACT,EAfH,UAiBE,UAAC,KAAD,CAAMzC,UAAWC,EAAjB,WACE,mBAAOD,UAAWC,EAAlB,kBAEE,SAAC,KAAD,CACEE,KAAK,OACLf,KAAK,OACHuD,QAAQ,6HACR3C,UAAWC,EACb2C,MAAM,yIACNC,UAAQ,KAEV,SAAC,KAAD,CAAc7C,UAAWC,EAAWb,KAAK,OAAO0D,UAAU,UAE5D,mBAAO9C,UAAWC,EAAlB,0BAEE,SAAC,KAAD,CACEE,KAAK,MACHf,KAAK,SACLY,UAAWC,EACb0C,QAAQ,qIACRC,MAAM,+FACNC,UAAQ,KAEV,SAAC,KAAD,CAAc7C,UAAWC,EAAWb,KAAK,SAAS0D,UAAU,UAE5D,mBAAQ9C,UAAWC,EAAYE,KAAK,SAApC,UAA6C,SAAC,MAAD,CAAsBK,KAAM,GAAIC,MAAM,kBAM5F,E,UCpED,EAAyB,uBAAzB,EAAwD,sBCI3CsC,EAAS,WACpB,IAAM/D,GAAS4C,EAAAA,EAAAA,IAAY7C,GACrB+B,GAAWC,EAAAA,EAAAA,MACjB,OACE,mBAAOf,UAAWC,EAAlB,mCAEE,kBAAOD,UAAWC,EAAWE,KAAK,OAAOC,MAAOpB,EAAQqB,SAAU,SAAA2C,GAAUlC,GAASmC,EAAAA,EAAAA,GAAaD,EAAMzC,OAAOH,OAAQ,MAG5H,ECNc,SAAS8C,IACtB,IAAMpC,GAAWC,EAAAA,EAAAA,MACXnC,GAAYgD,EAAAA,EAAAA,IAAYjD,GACxBG,GAAQ8C,EAAAA,EAAAA,IAAY/C,GAM1B,OAJAsE,EAAAA,EAAAA,YAAU,WACRrC,GAASsC,EAAAA,EAAAA,MACV,GAAE,CAACtC,KAGF,4BACE,SAACqB,EAAD,KAEA,SAACY,EAAD,IACCnE,IAAcE,IAAS,mDACxB,SAAC6C,EAAD,MAGL,C","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/EditContactForm/EditContactForm.module.css?43d2","components/EditContactForm/EditContactForm.jsx","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContactItems = createSelector([selectContacts, selectFilter], (contacts, filter) => contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase())));\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"EditContactForm_form__L+B1Z\",\"label\":\"EditContactForm_label__EclF4\",\"input\":\"EditContactForm_input__+zEeD\",\"inputName\":\"EditContactForm_inputName__+iebB\",\"btn\":\"EditContactForm_btn__XVbTs\",\"closeBtn\":\"EditContactForm_closeBtn__L2cgA\",\"checkBtn\":\"EditContactForm_checkBtn__pmi8q\"};","import { useState } from 'react';\nimport { AiOutlineCloseCircle, AiOutlineCheckCircle } from 'react-icons/ai'\nimport css from './EditContactForm.module.css'\n\nexport const EditContactForm = ({onStopChange, onSubmit, name, number}) => {\n  const [editedName, setEditedName] = useState(name);\n  const [editedNumber, setEditedNumber] = useState(number);\n\n  const handleNameChange = (e) => {\n    setEditedName(e.target.value);\n  };\n\n  const handleNumberChange = (e) => {\n    setEditedNumber(e.target.value);\n  };\n\n  return (\n    <form className={css.form} onSubmit={onSubmit} autoComplete=\"off\">\n      <label className={css.label}>\n        <input className={`${css.input} ${css.inputName}`} type=\"text\" name=\"name\" value={editedName} onChange={handleNameChange}/>\n      </label>\n      <label className={css.label}>\n        Tel.:\n        <input className={css.input} type=\"tel\" name=\"number\" value={` ${editedNumber}`} onChange={handleNumberChange}/>\n      </label>\n      <button className={`${css.btn} ${css.checkBtn}`} type=\"submit\"><AiOutlineCheckCircle size={20} color='#193300'/></button>\n      <button className={`${css.btn} ${css.closeBtn}`} onClick={onStopChange} type=\"button\"><AiOutlineCloseCircle size={20} color='#660000'/></button>\n  </form>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"ContactListItem_contact__gtH4X\",\"container\":\"ContactListItem_container__ARM-O\",\"userInfo\":\"ContactListItem_userInfo__4HuKl\",\"name\":\"ContactListItem_name__cIBvF\",\"number\":\"ContactListItem_number__j2Ar0\",\"userActions\":\"ContactListItem_userActions__pYkHC\",\"btn\":\"ContactListItem_btn__Kdzd+\",\"editBtn\":\"ContactListItem_editBtn__QaU7j\",\"delBtn\":\"ContactListItem_delBtn__Mczr7\"};","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\"\nimport { MdDelete } from 'react-icons/md'\nimport { FaEdit } from 'react-icons/fa'\nimport { deleteContact, editContact } from \"redux/contacts/operations\";\nimport { EditContactForm } from \"components/EditContactForm/EditContactForm\";\nimport css from \"./ContactListItem.module.css\"\n\n\n\n\n\n\nexport const ContactListItem = ({ contact }) => {\n  const [isContactUpdating, setIsContactUpdating] = useState(false);\n\nfunction handleStartChanging() {\n  setIsContactUpdating(true);\n  console.log('proizoshlo')\n\n  }\n  function handleStopChanging() {\n    setIsContactUpdating(false);\n  }\n  const handleGetUpdatedContact = e => {\n    e.preventDefault(); const form = e.currentTarget; \n    const values = {\n      id: contact.id,\n      name: form.elements.name.value,\n      number: form.elements.number.value\n          }\n            dispatch(\n              editContact(values)\n            );\n            \n    form.reset();\n    setIsContactUpdating(false);\n  };\n  \n\n  const dispatch = useDispatch();\n  \n  return (\n    <li key={contact.id} className={css.contact}>\n      \n      {isContactUpdating ? (\n        <div className={css.container}>\n          <EditContactForm onStopChange={handleStopChanging} onSubmit={handleGetUpdatedContact} name={contact.name} number={contact.number} />\n        </div>\n        ) : (\n            <div className={css.container}>\n              <div className={css.userInfo}>\n                <p className={css.name}>{contact.name}</p>\n                <p className={css.number}>Tel.: {contact.number}</p>\n              </div>\n          \n              <button className={`${css.editBtn} ${css.btn}`} onClick={handleStartChanging}><FaEdit size={20} color=\"#3a2302\" /></button>\n              \n          \n            </div>\n            \n            \n        )}\n        <button className={`${css.delBtn} ${css.btn}`} onClick={() => { dispatch(deleteContact(contact.id)) }}><MdDelete size={20} color=\"#3a2302\" /></button>\n    </li>\n  )\n} ","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"ContactsList_contacts__gnzMi\"};","import { useSelector } from \"react-redux\"\nimport { selectVisibleContactItems } from \"redux/contacts/selectors\"\nimport { ContactListItem } from \"components/ContactListItem/ContactListItem\"\nimport css from \"./ContactsList.module.css\"\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectVisibleContactItems);\n\n  return (\n    <ul className={css.contacts}>\n      {\n        contacts.map(contact => <ContactListItem contact={contact} />)\n      }\n    </ul>\n  )\n}","// extracted by mini-css-extract-plugin\nexport default {\"mainTitle\":\"ContactForm_mainTitle__Eud0j\",\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"submit\":\"ContactForm_submit__eYq7N\",\"error\":\"ContactForm_error__C1smZ\"};","import { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { BsFillPersonPlusFill } from 'react-icons/bs'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from 'yup';\nimport \"@fontsource/mate-sc\";\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport css from './ContactForm.module.css'\n \nconst schema = Yup.object().shape({\n  name: Yup.string()\n    .min(1, 'Too Short!')\n    .max(30, 'Too Long!'),\n}) \n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  \n  return (\n    \n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={schema}\n      onSubmit={(values, actions) => {\n        const isContactExist = contacts.filter(contact => contact.name === values.name).length !== 0;\n        if (isContactExist) {\n          alert(`${values.name} is already in contacts.`);\n          actions.resetForm();\n          return;\n        }\n        dispatch(addContact(values))\n        actions.resetForm();\n      }}\n    >\n      <Form className={css.form}>\n        <label className={css.label}>\n          Name\n          <Field\n            type=\"text\"\n            name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' \\\\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              className={css.input}\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <ErrorMessage className={css.error} name=\"name\" component=\"p\"/>\n        </label>\n        <label className={css.label}>\n          Phone number\n          <Field\n            type=\"tel\"\n              name=\"number\"\n              className={css.input}\n            pattern=\"\\\\+?\\\\d{1,4}?[ .\\\\-\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[ .\\\\-\\\\s]?\\\\d{1,4}[ .\\\\-\\\\s]?\\\\d{1,4}[ .\\\\-\\\\s]?\\\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <ErrorMessage className={css.error} name=\"number\" component=\"p\"/>\n        </label>\n          <button className={css.submit} type=\"submit\"><BsFillPersonPlusFill size={32} color='#3A2302'/></button>\n      </Form>\n    </Formik>\n    \n    \n  );\n}","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch, useSelector } from \"react-redux\";\nimport { changeFilter } from \"redux/contacts/filterSlice\";\nimport { selectFilter } from \"redux/contacts/selectors\";\nimport css from \"./Filter.module.css\"\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  return (\n    <label className={css.filter}>\n      Find contacts by name\n      <input className={css.input} type=\"text\" value={filter} onChange={event => {dispatch(changeFilter(event.target.value))}} />\n    </label>\n  )\n}","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div >\n      <ContactForm />\n\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactsList />\n    </div>\n  );\n}"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContactItems","createSelector","contact","name","toLowerCase","includes","EditContactForm","onStopChange","onSubmit","number","useState","editedName","setEditedName","editedNumber","setEditedNumber","className","css","autoComplete","type","value","onChange","e","target","size","color","onClick","ContactListItem","isContactUpdating","setIsContactUpdating","dispatch","useDispatch","preventDefault","form","currentTarget","values","id","elements","editContact","reset","console","log","deleteContact","ContactsList","useSelector","map","schema","Yup","shape","min","max","ContactForm","initialValues","validationSchema","actions","length","alert","resetForm","addContact","pattern","title","required","component","Filter","event","changeFilter","Tasks","useEffect","fetchContacts"],"sourceRoot":""}